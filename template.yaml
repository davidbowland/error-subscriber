AWSTemplateFormatVersion: 2010-09-09
Description: >-
  error-subscriber

Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  Environment:
    Type: String
    Default: prod
    AllowedValues:
      - prod
      - test
    Description: Environment for deploy
  PhoneNumber:
    Type: String
    Description: Phone number to receive error messages

Mappings:
  EnvironmentMap:
    prod:
      alarmName: dbowland-error
      smsApiKeyName: sms-qu-ApiAp-0vvm2O9lZAEs
      smsApiUrl: https://sms-queue-api.dbowland.com/v1
      topic: error-topic
    test:
      alarmName: dbowland-error-test
      smsApiKeyName: sms-qu-ApiAp-3Ox0KVJulSZ0
      smsApiUrl: https://sms-queue-api.bowland.link/v1
      topic: error-topic-test

Resources:
  # Lambda

  SNSSubscriber:
    Type: AWS::Serverless::Function
    Properties:
      Description: Processes queued alerts from an SNS topic and sends them to sms-queue-api
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Handler: handlers/sns-payload-processor.snsPayloadProcessorHandler
      CodeUri: './dist'
      Environment:
        Variables:
          SMS_API_KEY_NAME: !FindInMap [EnvironmentMap, !Ref Environment, smsApiKeyName]
          SMS_API_URL: !FindInMap [EnvironmentMap, !Ref Environment, smsApiUrl]
          SMS_TO_PHONE_NUMBER: !Ref PhoneNumber
      MemorySize: 128
      Timeout: 60
      Policies:
        # Give Lambda basic execution Permission
        - AWSLambdaBasicExecutionRole
        # Grant access to API key values
        - Version: 2012-10-17
          Statement:
            - Action:
                - 'apigateway:GET'
              Effect: Allow
              Resource: 'arn:aws:apigateway:us-east-1::/apikeys'

  SNSLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Sub '${SNSSubscriber.Arn}'
      Principal: sns.amazonaws.com
      SourceArn: !Ref ErrorTopic

  # SNS

  ErrorTopic:
    Type: AWS::SNS::Topic
    DependsOn: [SNSSubscriber]
    Properties:
      DisplayName: !FindInMap [EnvironmentMap, !Ref Environment, topic]
      # KmsMasterKeyId: alias/aws/sns # CloudWatch doesn't have access to this key so it cannot post to the topic
      Subscription:
        - Endpoint: !Sub '${SNSSubscriber.Arn}'
          Protocol: lambda
      Tags:
        - Key: 'created-by'
          Value: 'error-subscriber'
        - Key: 'created-for'
          Value: 'dbowland'
      TopicName: !FindInMap [EnvironmentMap, !Ref Environment, topic]

  AlarmSNSPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sns:Publish'
            Effect: Allow
            Resource: !Ref ErrorTopic
            Principal:
              Service: cloudwatch.amazonaws.com
      Topics:
        - !Ref ErrorTopic

  # CloudWatch

  SNSLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: [SNSSubscriber]
    Properties:
      LogGroupName: !Sub /aws/lambda/${SNSSubscriber}
      RetentionInDays: 30
